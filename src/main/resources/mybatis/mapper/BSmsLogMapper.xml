<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zj.ryxb.dao.BSmsLogMapper" >
  <resultMap id="BaseResultMap" type="com.zj.ryxb.model.BSmsLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="verification_code" property="verificationCode" jdbcType="VARCHAR" />
    <result column="recipient" property="recipient" jdbcType="BIGINT" />
    <result column="recipient_name" property="recipientName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="send_time" property="sendTime" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, message, verification_code, recipient, recipient_name, status, send_time, enabled, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from b_sms_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from b_sms_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zj.ryxb.model.BSmsLog" useGeneratedKeys="true" keyProperty="id" >
    insert into b_sms_log (id, message, verification_code, 
      recipient, recipient_name, status, 
      send_time, enabled, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{message,jdbcType=VARCHAR}, #{verificationCode,jdbcType=VARCHAR}, 
      #{recipient,jdbcType=BIGINT}, #{recipientName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{sendTime,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zj.ryxb.model.BSmsLog" useGeneratedKeys="true" keyProperty="id"  >
    insert into b_sms_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="verificationCode != null" >
        verification_code,
      </if>
      <if test="recipient != null" >
        recipient,
      </if>
      <if test="recipientName != null" >
        recipient_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="verificationCode != null" >
        #{verificationCode,jdbcType=VARCHAR},
      </if>
      <if test="recipient != null" >
        #{recipient,jdbcType=BIGINT},
      </if>
      <if test="recipientName != null" >
        #{recipientName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zj.ryxb.model.BSmsLog" >
    update b_sms_log
    <set >
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="verificationCode != null" >
        verification_code = #{verificationCode,jdbcType=VARCHAR},
      </if>
      <if test="recipient != null" >
        recipient = #{recipient,jdbcType=BIGINT},
      </if>
      <if test="recipientName != null" >
        recipient_name = #{recipientName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zj.ryxb.model.BSmsLog" >
    update b_sms_log
    set message = #{message,jdbcType=VARCHAR},
      verification_code = #{verificationCode,jdbcType=VARCHAR},
      recipient = #{recipient,jdbcType=BIGINT},
      recipient_name = #{recipientName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      send_time = #{sendTime,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <!-- +++++++++++++++++++++    自动生成之后代码                +++++++++++++++++ -->
  
  <!-- 根据map条件分页查询数据列表-->
  <select id="queryListByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_sms_log  
    <include refid="queryByMap" />
	order by id desc
	<if test="pageIndex !=null and pageSize != null">
	 limit #{pageIndex},#{pageSize}
	</if>
  </select>
  
  <!-- 统计数据总条数 -->
  <select id="findTotalCount" parameterType="java.util.Map" resultType="java.lang.Integer">
	SELECT count(1) from b_sms_log 
	  <include refid="queryByMap" />
  </select>
  
   <!-- 构建查询参数 -->
  <sql id="queryByMap" >
    <where >1=1
		<if test="enabled !=null">
			and enabled = #{enabled}
		</if>
    </where>
  </sql>
  
</mapper>