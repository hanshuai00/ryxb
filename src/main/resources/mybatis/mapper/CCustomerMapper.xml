<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zj.ryxb.dao.CCustomerMapper" >
  <resultMap id="BaseResultMap" type="com.zj.ryxb.model.CCustomer" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="pay_password" property="payPassword" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="true_name" property="trueName" jdbcType="VARCHAR" />
    <result column="user_gender" property="userGender" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="userLevel" property="userLevel" jdbcType="INTEGER" />
    <result column="userImage" property="userImage" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, password, pay_password, nickname, true_name, user_gender,birthday,userLevel,
    userImage,enabled, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from c_customer
    where id = #{id,jdbcType=BIGINT}
  </select>
   
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from c_customer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zj.ryxb.model.CCustomer" useGeneratedKeys="true" keyProperty="id" >
    insert into c_customer (id, user_name, password, 
      pay_password, nickname, true_name, 
      user_gender,userLevel, enabled, create_time)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{payPassword,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{trueName,jdbcType=VARCHAR}, 
      #{userGender,jdbcType=INTEGER}, #{birthday,jdbcType=VARCHAR}, #{userLevel,jdbcType=INTEGER},  
      #{userImage,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}
      )
  </insert>
  <!--  #{lastIp,jdbcType=VARCHAR},#{lastLoginTime,jdbcType=VARCHAR} -->
  <insert id="insertSelective" parameterType="com.zj.ryxb.model.CCustomer" useGeneratedKeys="true" keyProperty="id" >
    insert into c_customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="payPassword != null" >
        pay_password,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="trueName != null" >
        true_name,
      </if>
      <if test="userGender != null" >
        user_gender,
      </if>
       <if test="birthday != null" >
        birthday,
      </if>
      <if test="userLevel != null" >
        userLevel,
      </if>
      <if test="userImage != null" >
        userImage,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null" >
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null" >
        #{userGender,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
       <if test="userLevel != null" >
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="userImage != null" >
        #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zj.ryxb.model.CCustomer" >
    update c_customer
    <set >
      <if test="userName != null and userName != '' " >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null" >
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null and nickname != '' " >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null" >
        user_gender = #{userGender,jdbcType=INTEGER},
      </if>
      <if test="birthday != null and birthday != ''  " >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null and userLevel != '' " >
        userLevel = #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="userImage != null and userImage != '' " >
        userImage = #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zj.ryxb.model.CCustomer" >
    update c_customer
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      pay_password = #{payPassword,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      true_name = #{trueName,jdbcType=VARCHAR},
      user_gender = #{userGender,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=VARCHAR},
      userLevel = #{userLevel,jdbcType=INTEGER},
      userImage = #{userImage,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- +++++++++++++++++++++    自动生成之后代码                +++++++++++++++++ -->
  
   <!-- 根据用户名获取有效的用户数据 -->
  <select id="findCustomerByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from c_customer
    where user_name = #{userName,jdbcType=VARCHAR} and enabled=1
  </select>
  
  <select id="loginIn" resultType="com.zj.ryxb.model.CCustomer" parameterType="java.util.Map">
    select 
    <include refid="Base_Column_List" />
    from c_customer
    where enabled =1 and user_name = #{userName} and password=#{password}
  </select>
  
   <!-- 根据map条件分页查询数据列表-->
  <select id="queryListByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from c_customer  
    <include refid="queryByMap" />
	order by id desc
	<if test="pageIndex !=null and pageSize != null">
	  limit #{pageIndex},#{pageSize}
	 </if>
  </select>
  
  <!-- 统计数据总条数 -->
  <select id="findTotalCount" parameterType="java.util.Map" resultType="java.lang.Integer">
	SELECT count(1) from c_customer 
	  <include refid="queryByMap" />
  </select>
  
   <!-- 构建查询参数 -->
  <sql id="queryByMap" >
    <where >1=1
    	<if test="userName !=null">
			and user_name  like #{userName}
		</if>
		<if test="userLevel !=null">
			and userLevel  = #{userLevel}
		</if>
		<if test="password !=null">
			and password  = #{password}
		</if>
		<if test="enabled !=null">
			and enabled = #{enabled}
		</if>
    </where>
  </sql>
  
  <!-- 通过detail查询用户列表 -->
  <select id="selectByOderDetail" resultMap="BaseResultMap"  parameterType="java.util.Map">
    select 
    <include refid="Base_Column_List" />
    from c_customer
    where id in(
		select 
	    DISTINCT d.customer_id
	    from m_order_detail d
	    LEFT JOIN m_order o on d.order_num = o.order_num and o.`status` >0
	    where d.enabled=1 and d.goods_id = #{goodsId,jdbcType=BIGINT} and d.issue = #{issue,jdbcType=INTEGER}
	)
  </select>
  
  
</mapper>