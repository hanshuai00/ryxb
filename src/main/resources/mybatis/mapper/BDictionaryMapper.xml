<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zj.ryxb.dao.BDictionaryMapper" >
  <resultMap id="BaseResultMap" type="com.zj.ryxb.model.BDictionary" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="pid" property="pid" jdbcType="BIGINT" />
    <result column="dic_code" property="dicCode" jdbcType="VARCHAR" />
    <result column="dic_value" property="dicValue" jdbcType="VARCHAR" />
    <result column="dic_value_en" property="dicValueEn" jdbcType="VARCHAR" />
    <result column="order_index" property="orderIndex" jdbcType="INTEGER" />
    <result column="enabled" property="enabled" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pid, dic_code, dic_value, dic_value_en, order_index, enabled
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from b_dictionary
    where  enabled=1 and id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from b_dictionary
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zj.ryxb.model.BDictionary" useGeneratedKeys="true" keyProperty="id" >
    insert into b_dictionary (id, pid, dic_code, 
      dic_value, dic_value_en, order_index, enabled)
    values (#{id,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{dicCode,jdbcType=VARCHAR}, 
      #{dicValue,jdbcType=VARCHAR}, #{dicValueEn,jdbcType=VARCHAR}, #{orderIndex,jdbcType=INTEGER}, 
      #{enabled,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zj.ryxb.model.BDictionary" useGeneratedKeys="true" keyProperty="id" >
    insert into b_dictionary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="dicCode != null" >
        dic_code,
      </if>
      <if test="dicValue != null" >
        dic_value,
      </if>
      <if test="dicValueEn != null" >
        dic_value_en,
      </if>
      <if test="orderIndex != null" >
        order_index,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="dicCode != null" >
        #{dicCode,jdbcType=VARCHAR},
      </if>
      <if test="dicValue != null" >
        #{dicValue,jdbcType=VARCHAR},
      </if>
      <if test="dicValueEn != null" >
        #{dicValueEn,jdbcType=VARCHAR},
      </if>
      <if test="orderIndex != null" >
        #{orderIndex,jdbcType=INTEGER},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zj.ryxb.model.BDictionary" >
    update b_dictionary
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="dicCode != null" >
        dic_code = #{dicCode,jdbcType=VARCHAR},
      </if>
      <if test="dicValue != null" >
        dic_value = #{dicValue,jdbcType=VARCHAR},
      </if>
      <if test="dicValueEn != null" >
        dic_value_en = #{dicValueEn,jdbcType=VARCHAR},
      </if>
      <if test="orderIndex != null" >
        order_index = #{orderIndex,jdbcType=INTEGER},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zj.ryxb.model.BDictionary" >
    update b_dictionary
    set pid = #{pid,jdbcType=BIGINT},
      dic_code = #{dicCode,jdbcType=VARCHAR},
      dic_value = #{dicValue,jdbcType=VARCHAR},
      dic_value_en = #{dicValueEn,jdbcType=VARCHAR},
      order_index = #{orderIndex,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
    <!-- 查询所有数据 -->
	<select id="findAllDictionary" resultMap="BaseResultMap">
		select 
        <include refid="Base_Column_List"/>
		<![CDATA[ 
			FROM b_dictionary
			WHERE 1=1 AND enabled =1 ORDER BY pid,order_index
		]]>
	</select>
	
	<select id="findParentList" resultMap="BaseResultMap" >
		select 
        <include refid="Base_Column_List" />
		<![CDATA[ 
			FROM b_dictionary
			WHERE pid is null AND enabled =1 ORDER BY order_index,id
		]]>
	</select>
	
    <select id="findByParentCode" resultMap="BaseResultMap">
	    select 
        <include refid="Base_Column_List" />
		<![CDATA[ 
			from b_dictionary
			where enabled =1
			  and pid =(select id from b_dictionary WHERE dic_code = #{dicCode,jdbcType=VARCHAR})
			ORDER BY order_index
		]]>
	</select>
	
	<select id="findParent" resultMap="BaseResultMap">
	    select 
        <include refid="Base_Column_List" />
		<![CDATA[ 
			from b_dictionary
			 WHERE enabled =1 and pid is null and dic_code = #{dicCode,jdbcType=VARCHAR}
		]]>
	</select>
	
	<select id="findByParentId" resultMap="BaseResultMap" >
		 select 
        <include refid="Base_Column_List" />
		<![CDATA[ 
			FROM b_dictionary
			WHERE  enabled =1 AND pid=#{pId,jdbcType=BIGINT}
			ORDER BY order_index
		]]>
	</select>
	
	<delete id="deleteByParentId" parameterType="java.lang.Long" >
	   <![CDATA[
	  		delete from b_dictionary
   			where pid = #{pId,jdbcType=BIGINT}
		]]>
	 </delete>
  
  <!-- 根据map条件分页查询数据列表-->
  <select id="queryListByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_dictionary  
    <include refid="queryByMap" />
	order by order_index,id
	<if test="pageIndex !=null and pageSize != null">
	 limit #{pageIndex},#{pageSize}
	</if>
  </select>
  
  <!-- 统计数据总条数 -->
  <select id="findTotalCount" parameterType="java.util.Map" resultType="java.lang.Integer">
	SELECT count(1) from b_dictionary 
	  <include refid="queryByMap" />
  </select>
  
   <!-- 构建查询参数 -->
  <sql id="queryByMap" >
    <where >1=1
    	<if test="isParent !=null">
			and pid is null
		</if>
		<if test="enabled !=null">
			and enabled = #{enabled}
		</if>
    </where>
  </sql>
</mapper>